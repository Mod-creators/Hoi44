#####
##### PARANOIA SYSTEM #####
#####

ISI_paranoia_very_low_increase_effect = {
	if = {
		limit = {
			has_country_flag = ISI_paranoia_system_active_flag
		}
		custom_effect_tooltip = ISI_paranoia_very_low_increase_effect_tt
		add_to_variable = { ISI_paranoia = ISI_paranoia_very_low_increase }
		ISI_paranoia_clamp_and_update_ui_effect = yes
	}
}

ISI_paranoia_low_increase_effect = {
	if = {
		limit = {
			has_country_flag = ISI_paranoia_system_active_flag
		}
		custom_effect_tooltip = ISI_paranoia_low_increase_effect_tt
		add_to_variable = { ISI_paranoia = ISI_paranoia_low_increase }
		ISI_paranoia_clamp_and_update_ui_effect = yes
	}
}

ISI_paranoia_medium_increase_effect = {
	if = {
		limit = {
			has_country_flag = ISI_paranoia_system_active_flag
		}
		custom_effect_tooltip = ISI_paranoia_medium_increase_effect_tt
		add_to_variable = { ISI_paranoia = ISI_paranoia_medium_increase }
		ISI_paranoia_clamp_and_update_ui_effect = yes
	}
}

ISI_paranoia_high_increase_effect = {
	if = {
		limit = {
			has_country_flag = ISI_paranoia_system_active_flag
		}
		custom_effect_tooltip = ISI_paranoia_high_increase_effect_tt
		add_to_variable = { ISI_paranoia = ISI_paranoia_high_increase }
		ISI_paranoia_clamp_and_update_ui_effect = yes
	}
}

ISI_paranoia_very_high_increase_effect = {
	if = {
		limit = {
			has_country_flag = ISI_paranoia_system_active_flag
		}
		custom_effect_tooltip = ISI_paranoia_very_high_increase_effect_tt
		add_to_variable = { ISI_paranoia = ISI_paranoia_very_high_increase }
		ISI_paranoia_clamp_and_update_ui_effect = yes
	}
}

ISI_paranoia_low_decrease_effect = {
	if = {
		limit = {
			has_country_flag = ISI_paranoia_system_active_flag
		}
		custom_effect_tooltip = ISI_paranoia_low_decrease_effect_tt
		add_to_variable = { ISI_paranoia = ISI_paranoia_low_decrease }
		ISI_paranoia_clamp_and_update_ui_effect = yes
	}
}

ISI_paranoia_medium_decrease_effect = {
	if = {
		limit = {
			has_country_flag = ISI_paranoia_system_active_flag
		}
		custom_effect_tooltip = ISI_paranoia_medium_decrease_effect_tt
		add_to_variable = { ISI_paranoia = ISI_paranoia_medium_decrease }
		ISI_paranoia_clamp_and_update_ui_effect = yes
	}
}

ISI_paranoia_high_decrease_effect = {
	if = {
		limit = {
			has_country_flag = ISI_paranoia_system_active_flag
		}
		custom_effect_tooltip = ISI_paranoia_high_decrease_effect_tt
		add_to_variable = { ISI_paranoia = ISI_paranoia_high_decrease }
		ISI_paranoia_clamp_and_update_ui_effect = yes
	}
}

ISI_paranoia_very_high_decrease_effect = {
	if = {
		limit = {
			has_country_flag = ISI_paranoia_system_active_flag
		}
		custom_effect_tooltip = ISI_paranoia_very_high_decrease_effect_tt
		add_to_variable = { ISI_paranoia = ISI_paranoia_very_high_decrease }
		ISI_paranoia_clamp_and_update_ui_effect = yes
	}
}

ISI_paranoia_increase_based_on_unit_leader_level_effect = {
	if = {
		limit = {
			has_country_flag = ISI_paranoia_system_active_flag
		}
		#custom_effect_tooltip = ISI_paranoia_increase_based_on_unit_leader_level_effect_tt
		add_to_variable = { ISI_paranoia = ISI_unit_leader_level }
		ISI_paranoia_clamp_and_update_ui_effect = yes
		clear_variable = ISI_unit_leader_level
	}
}

ISI_paranoia_decrease_based_on_unit_leader_level_effect = {
	if = {
		limit = {
			has_country_flag = ISI_paranoia_system_active_flag
		}
		#custom_effect_tooltip = ISI_paranoia_decrease_based_on_unit_leader_level_effect_tt
		subtract_from_variable = { ISI_paranoia = ISI_unit_leader_level }
		ISI_paranoia_clamp_and_update_ui_effect = yes
		clear_variable = ISI_unit_leader_level
	}
}

ISI_paranoia_modifier_increase_effect = { #Called on_weekly to apply the modifier
	custom_effect_tooltip = ISI_paranoia_modifier_increase_effect_tt
	set_temp_variable = { ISI_paranoia_total_weekly_modifier_increase = ISI_paranoia_modifier_increase } #Get default weekly modifier increase value
	multiply_temp_variable = { ISI_paranoia_total_weekly_modifier_increase = ISI_paranoia_weekly_modifiers_amount } #Multiply default weekly modifier increase by the number of active weekly modifiers
	add_to_variable = { ISI_paranoia = ISI_paranoia_total_weekly_modifier_increase } #Apply the result and add to Paranoia
	ISI_paranoia_clamp_and_update_ui_effect = yes
}

ISI_paranoia_modifier_update_gui_tooltip = { #Only updates the tooltip in the decision GUI
	ROOT = { set_variable = { ISI_paranoia_weekly_modifier_ui = ISI_paranoia_modifier_increase } } #Get default weekly modifier increase value
	ROOT = { multiply_variable = { ISI_paranoia_weekly_modifier_ui = ISI_paranoia_weekly_modifiers_amount } } #Multiply default weekly modifier increase by the number of active weekly modifiers
}

ISI_paranoia_clamp_and_update_ui_effect = {
	clamp_variable = {
		var = ISI_paranoia
		min = 0
		max = 100
	}
	ISI_update_ui_effect = yes
}

ISI_paranoia_increase_purge_counter_regular = {
	add_to_variable = { ISI_regular_purge_counter = 1 }
	add_to_variable = { ISI_total_purge_counter = 1 }
}

ISI_paranoia_increase_purge_counter_great = {
	add_to_variable = { ISI_great_purge_counter = 1 }
	add_to_variable = { ISI_total_purge_counter = 1 }
}

ISI_initiate_paranoia_effect = { #PARANOIA SYSTEM STARTS, GOOD LUCK COMRADE
	set_country_flag = ISI_paranoia_system_active_flag #Uh oh...

	#Stalin gets paranoid
	add_country_leader_trait = stalin_political_paranoia
}

ISI_remove_paranoia_effect = { # NO MORE PARANOIA, COMRADES
	custom_effect_tooltip = ISI_stalins_cult_of_personality_tt
	set_variable = { ISI_paranoia = 0 }
	set_variable = { ISI_paranoia_modifier_increase = 0 }
	ISI_paranoia_clamp_and_update_ui_effect = yes
	clr_country_flag = ISI_paranoia_system_active_flag
	clr_country_flag = ISI_paranoia_modifier_active_flag
	if = {
		limit = {
			has_country_leader_with_trait = stalin_political_paranoia_advanced
		}
		remove_country_leader_trait = stalin_political_paranoia_advanced
	}
	else_if = {
		limit = {
			has_country_leader_with_trait = stalin_political_paranoia
		}
		remove_country_leader_trait = stalin_political_paranoia
	}

	#No more paranoia from NKVD chiefs
	hidden_effect = {
		if = {
			limit = {
				has_character = ISI_genrikh_yagoda
			}

			#Remove old trait
			if = {
				limit = {
					ISI_genrikh_yagoda = {
						has_trait = head_of_the_nkvd_yagoda_initial
					}
				}
				remove_trait = {
					character = ISI_genrikh_yagoda
					trait = head_of_the_nkvd_yagoda_initial
					slot = political_advisor
				}
			}
			else_if = {
				limit = {
					ISI_genrikh_yagoda = {
						has_trait = head_of_the_nkvd_yagoda
					}
				}
				remove_trait = {
					character = ISI_genrikh_yagoda
					trait = head_of_the_nkvd_yagoda
					slot = political_advisor
				}
			}

			#Add final trait
			add_trait = {
				character = ISI_genrikh_yagoda
				trait = head_of_the_nkvd_yagoda_no_paranoia
				slot = political_advisor
			}
			set_can_be_fired_in_advisor_role = {
				character = ISI_genrikh_yagoda 
				value = yes
			}
		}

		if = {
			limit = {
				has_character = ISI_nikolay_yezhov
			}

			#Remove old trait
			if = {
				limit = {
					ISI_nikolay_yezhov = {
						has_trait = head_of_the_nkvd_yezhov_initial
					}
				}
				remove_trait = {
					character = ISI_nikolay_yezhov
					trait = head_of_the_nkvd_yezhov_initial
					slot = political_advisor
				}
			}
			else_if = {
				limit = {
					ISI_nikolay_yezhov = {
						has_trait = head_of_the_nkvd_yezhov
					}
				}
				remove_trait = {
					character = ISI_nikolay_yezhov
					trait = head_of_the_nkvd_yezhov
					slot = political_advisor
				}
			}
			
			#Add final trait
			add_trait = {
				character = ISI_nikolay_yezhov
				trait = head_of_the_nkvd_yezhov_no_paranoia
				slot = political_advisor
			}
			set_can_be_fired_in_advisor_role = {
				character = ISI_nikolay_yezhov 
				value = yes
			}
		}

		if = {
			limit = {
				has_character = ISI_lavrenty_beriya
			}

			#Remove old trait
			if = {
				limit = {
					ISI_lavrenty_beriya = {
						has_trait = head_of_the_nkvd_beriya_initial
					}
				}
				remove_trait = {
					character = ISI_lavrenty_beriya
					trait = head_of_the_nkvd_beriya_initial
					slot = political_advisor
				}
			}
			else_if = {
				limit = {
					ISI_lavrenty_beriya = {
						has_trait = head_of_the_nkvd_beriya
					}
				}
				remove_trait = {
					character = ISI_lavrenty_beriya
					trait = head_of_the_nkvd_beriya
					slot = political_advisor
				}
			}
			
			#Add final trait
			add_trait = {
				character = ISI_lavrenty_beriya
				trait = head_of_the_nkvd_beriya_no_paranoia
				slot = political_advisor
			}
			set_can_be_fired_in_advisor_role = {
				character = ISI_lavrenty_beriya 
				value = yes
			}
		}
	}
}

#UI
ISI_update_ui_effect = {
	if = {
		limit = {
			check_variable = { ISI_paranoia = 0 }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 1 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 5 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 2 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 10 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 3 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 15 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 4 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 20 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 5 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 25 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 6 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 30 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 7 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 35 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 8 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 40 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 9 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 45 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 10 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 50 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 11 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 55 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 12 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 60 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 13 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 65 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 14 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 70 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 15 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 75 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 16 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 80 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 17 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 85 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 18 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 90 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 19 }
	}
	else_if = {
		limit = {
			check_variable = { ISI_paranoia = 95 compare = less_than_or_equals }
		}
		set_variable = { ISI_paranoia_main_paranoiameter = 20 }
	}
	else = { # paranoia > 95
		set_variable = { ISI_paranoia_main_paranoiameter = 21 }
	}
}

#EFFECTS FROM PURGES
ISI_paranoia_daunt_generals_effect = {
	set_temp_variable = { temp_targets_index = 0 }

	while_loop_effect = {
		limit = {
			check_variable = { temp_targets_index = 5 compare = less_than }
			any_army_leader = {
				NOT = { has_character_flag = ISI_targeted_for_purge_flag }
				NOT = { has_trait = trait_ISI_cowed_by_stalin_army }
			}
		}
		random_army_leader = {
			limit = {
				NOT = { has_character_flag = ISI_targeted_for_purge_flag }
				NOT = { has_trait = trait_ISI_cowed_by_stalin_army }
			}
			add_unit_leader_trait = trait_ISI_cowed_by_stalin_army
		}
		add_to_temp_variable = { temp_targets_index = 1 }
		#log = "LOOP ROUND [?temp_targets_index]"
	}

	custom_effect_tooltip = ISI_daunt_generals_tt
}

ISI_paranoia_daunt_generals_minor_effect = {
	set_temp_variable = { temp_targets_index = 0 }

	while_loop_effect = {
		limit = {
			check_variable = { temp_targets_index = 2 compare = less_than }
			any_army_leader = {
				NOT = { has_character_flag = ISI_targeted_for_purge_flag }
				NOT = { has_trait = trait_ISI_cowed_by_stalin_army }
			}
		}
		random_army_leader = {
			limit = {
				NOT = { has_character_flag = ISI_targeted_for_purge_flag }
				NOT = { has_trait = trait_ISI_cowed_by_stalin_army }
			}
			add_unit_leader_trait = trait_ISI_cowed_by_stalin_army
		}
		add_to_temp_variable = { temp_targets_index = 1 }
		#log = "LOOP ROUND [?temp_targets_index]"
	}

	custom_effect_tooltip = ISI_daunt_generals_minor_tt
}

ISI_paranoia_daunt_admirals_effect = {
	set_temp_variable = { temp_targets_index = 0 }

	while_loop_effect = {
		limit = {
			check_variable = { temp_targets_index = 5 compare = less_than }
			any_navy_leader = {
				NOT = { has_character_flag = ISI_targeted_for_purge_flag }
				NOT = { has_trait = trait_ISI_cowed_by_stalin_navy }
			}
		}
		random_navy_leader = {
			limit = {
				NOT = { has_character_flag = ISI_targeted_for_purge_flag }
				NOT = { has_trait = trait_ISI_cowed_by_stalin_navy }
			}
			add_unit_leader_trait = trait_ISI_cowed_by_stalin_navy
		}
		add_to_temp_variable = { temp_targets_index = 1 }
		#log = "LOOP ROUND [?temp_targets_index]"
	}

	custom_effect_tooltip = ISI_daunt_admirals_tt
}

ISI_paranoia_daunt_admirals_minor_effect = {
	set_temp_variable = { temp_targets_index = 0 }

	while_loop_effect = {
		limit = {
			check_variable = { temp_targets_index = 2 compare = less_than }
			any_navy_leader = {
				NOT = { has_character_flag = ISI_targeted_for_purge_flag }
				NOT = { has_trait = trait_ISI_cowed_by_stalin_navy }
			}
		}
		random_navy_leader = {
			limit = {
				NOT = { has_character_flag = ISI_targeted_for_purge_flag }
				NOT = { has_trait = trait_ISI_cowed_by_stalin_navy }
			}
			add_unit_leader_trait = trait_ISI_cowed_by_stalin_navy
		}
		add_to_temp_variable = { temp_targets_index = 1 }
		#log = "LOOP ROUND [?temp_targets_index]"
	}

	custom_effect_tooltip = ISI_daunt_admirals_minor_tt
}


ISI_purge_character_effect = { #Expected to be called in the character scope
	set_character_flag = ISI_character_purged_flag
	PREV = { retire_character = PREV }
}

ISI_paranoia_update_portraits_ui = { #Expected to be called in the country scope
	if = {
		limit = {
			NOT = { has_character = ISI_grigory_zinovyev }
			check_variable = { ISI.ISI_paranoia_photo_zinovyev = 8 compare = not_equals }
		}
		set_variable = { ISI.ISI_paranoia_photo_zinovyev = 8 }
		set_country_flag = ISI_added_purged_portrait_flag
	}
	if = {
		limit = {
			NOT = { has_character = ISI_karl_radek }
			check_variable = { ISI.ISI_paranoia_photo_radek = 9 compare = not_equals }
		}
		set_variable = { ISI.ISI_paranoia_photo_radek = 9 }
		set_country_flag = ISI_added_purged_portrait_flag
	}
	if = {
		limit = {
			NOT = { has_character = ISI_nikolay_bukharin }
			check_variable = { ISI.ISI_paranoia_photo_bukharin = 10 compare = not_equals }
		}
		set_variable = { ISI.ISI_paranoia_photo_bukharin = 10 }
		set_country_flag = ISI_added_purged_portrait_flag
	}
	if = {
		limit = {
			NOT = { has_character = ISI_lev_trotsky }
			check_variable = { ISI.ISI_paranoia_photo_trotsky = 11 compare = not_equals }
		}
		set_variable = { ISI.ISI_paranoia_photo_trotsky = 11 }
		set_country_flag = ISI_added_purged_portrait_flag
	}
	if = {
		limit = {
			NOT = { has_character = ISI_mikhail_tukhachevsky }
			check_variable = { ISI.ISI_paranoia_photo_tukhachevsky = 12 compare = not_equals }
		}
		set_variable = { ISI.ISI_paranoia_photo_tukhachevsky = 12 }
		set_country_flag = ISI_added_purged_portrait_flag
	}
	if = { #Generic
		limit = {
			NOT = { has_country_flag = ISI_added_purged_portrait_flag } #IMPORTANT: This flag needs to be cleared after the purge character effect in eevery event purging characters
		}
		set_temp_variable = { ISI_generic_portrait_frame = ISI_paranoia_portrait_index }
		if = { #There are 6 portraits and 12 slots, so second round of generic portraits
			limit = {
				check_variable = { ISI_paranoia_portrait_index = 6 compare = greater_than }
			}
			subtract_from_temp_variable = { ISI_generic_portrait_frame = 6 }
		}
		add_to_temp_variable = { ISI_generic_portrait_frame = 1 }

		add_to_array = {
			array = ISI_paranoia_generic_portraits_array
			value = ISI_generic_portrait_frame
			index = ISI_paranoia_portrait_index
		}
		
		add_to_variable = { ISI_paranoia_portrait_index = 1 }
	}
	clr_country_flag = ISI_added_purged_portrait_flag
}

ISI_clean_purge_targets_effect = {
	hidden_effect = {
		every_character = {
			limit = {
				has_character_flag = ISI_targeted_for_purge_flag
			}
			clr_character_flag = ISI_targeted_for_purge_flag
		}
	}
}

ISI_clear_unavoidable_purge_flags_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_country_flag = ISI_purge_event_unavoidable_flag
			}
			clr_country_flag = ISI_purge_event_unavoidable_flag
		}
	}
}

ISI_add_random_character_to_purge_targets_effect = {
	if = {
		limit = {
			check_variable = { ISI_specific_random_purge_targets_override = 0 compare = less_than }
		}
		add_to_variable = { ISI_specific_random_purge_targets_override = 2 } #Var starts at -1 so it's necessary to take it into account
	}
	else = {
		add_to_variable = { ISI_specific_random_purge_targets_override = 1 }
	}
}

ISI_no_random_characters_for_this_purge_effect = {
	set_variable = { ISI_specific_random_purge_targets_override = 0 }
}

ISI_reset_specific_random_target_override_effect = {
	set_variable = { ISI_specific_random_purge_targets_override = -1 }
}


###############
### PHASE 1 ###
###############
# Check for a randomly triggered purge, and set the appropriate severity (regular purge/great purge) [RANDOM PURGE & SIZE]
ISI_check_for_a_new_purge_effect = { #Useless now. Leaving it just in case
	if = { # REGULAR PURGE
		limit = {
			ISI_paranoia_is_medium_level = yes
		}
		ISI_manage_a_regular_purge_effect = yes
	}
	else_if = { # GREAT PURGE
		limit = {
			ISI_paranoia_is_high_level = yes
		}
		ISI_manage_a_great_purge_effect = yes
	}
}


###############
### PHASE 2 ###
###############
#Set the Area to be purged (admin, army, navy, airforce) [AREA]

# REGULAR PURGE
ISI_manage_a_regular_purge_effect = { # Phase 2: Set the Area to be purged (admin, army, navy, airforce), then set the actual targets (people), then trigger event (Phase 3)
	# Randomly choose an area to purge
	random_list = {
		25 = { # ADMINISTRATION
			modifier = { #Don't repeat last purge please
				factor = 0.1
				check_variable = { ISI_last_regular_purge_area = 1 }
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_character = {
					is_character_slot = political_advisor
					has_character_flag = ISI_potential_target_flag
				}
			}
			modifier = { #Yagoda is in the NKVD -> He shall be purged
				factor = 1.5
				has_idea = ISI_genrikh_yagoda
			}
			modifier = { #There are no purges available
				factor = 0
				NOT = {
					any_character = {
						is_character_slot = political_advisor
						ISI_character_can_be_purged = yes
					}
				}
				has_idea = ISI_understaffed_bureaucracy
				has_idea = ISI_lavrenty_beriya
			}
			ISI_pick_regular_purge_administration_type_effect = yes
		}
		25 = { # ARMY
			modifier = { #Don't repeat last purge please
				factor = 0.1
				check_variable = { ISI_last_regular_purge_area = 2 }
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_character = {
					has_character_flag = ISI_potential_target_flag
					OR = {
						is_army_leader = yes
						has_army_ledger = yes
					}
				}
			}
			modifier = { #There are no purges available
				factor = 0
				NOT = {
					any_army_leader = {
						ISI_character_can_be_purged = yes
						NOT = { has_trait = trait_ISI_stalinist }
					}
				}
				has_idea = ISI_anti_soviet_military_thinking_banned_army
				has_idea = ISI_training_activities_curtailed
			}
			ISI_pick_regular_purge_army_type_effect = yes
		}
		25 = { # NAVY
			modifier = { #Don't repeat last purge please
				factor = 0.1
				check_variable = { ISI_last_regular_purge_area = 3 }
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_navy_leader = {
					has_character_flag = ISI_potential_target_flag
				}
			}
			modifier = { #There are no purges available
				factor = 0
				NOT = {
					any_navy_leader = {
						ISI_character_can_be_purged = yes
						NOT = { has_trait = trait_ISI_stalinist }
					}
				}
				has_idea = ISI_anti_soviet_military_thinking_banned_navy
				has_idea = ISI_shipyard_staff_purged
			}
			ISI_pick_regular_purge_navy_type_effect = yes
		}
		25 = { # AIRFORCE
			modifier = { #Don't repeat last purge please
				factor = 0.1
				check_variable = { ISI_last_regular_purge_area = 4 }
			}
			modifier = { #Someone is a potential targets
				factor = 2
				any_character = {
					has_air_ledger = yes
					has_character_flag = ISI_potential_target_flag
				}
			}
			modifier = { #There are no purges available
				factor = 0
				has_idea = ISI_anti_soviet_military_thinking_banned_airforce
				has_idea = ISI_ground_based_training
			}
			ISI_pick_regular_purge_airforce_type_effect = yes
		}
	}
}

# GREAT PURGE
ISI_manage_a_great_purge_effect = {
	# Randomly choose an area to purge
	random_list = {
		25 = { # ADMINISTRATION
			modifier = { #Don't repeat last purge please
				factor = 0
				check_variable = { ISI_last_great_purge_area = 1 }
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_character = {
					is_character_slot = political_advisor
					has_character_flag = ISI_potential_target_flag
				}
			}
			modifier = { #There are no purges available
				factor = 0
				NOT = {
					any_character = {
						is_character_slot = political_advisor
						NOT = { #NKVDs have their own purge
							is_character = ISI_genrikh_yagoda
							is_character = ISI_nikolay_yezhov
							is_character = ISI_lavrenty_beriya
						}
						ISI_character_can_be_purged = yes
					}
				}
			}
			ISI_pick_great_purge_administration_type_effect = yes
		}
		25 = { # ARMY
			modifier = { #Don't repeat last purge please
				factor = 0
				check_variable = { ISI_last_great_purge_area = 2 }
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_character = {
					has_character_flag = ISI_potential_target_flag
					OR = {
						is_army_leader = yes
						has_army_ledger	= yes
					}
				}
			}
			modifier = { #There are no purges available
				factor = 0
				has_idea = ISI_purged_junior_army_officers_3
				NOT = {
					any_character = {
						OR = {
							is_army_leader = yes
							has_army_ledger = yes
						}
						ISI_character_can_be_purged = yes
						NOT = { has_trait = trait_ISI_stalinist }
					}
				}
			}
			ISI_pick_great_purge_army_type_effect = yes
		}
		25 = { # NAVY
			modifier = { #Don't repeat last purge please
				factor = 0
				check_variable = { ISI_last_great_purge_area = 3 }
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_character = {
					OR = {
						is_navy_leader = yes
						has_navy_ledger = yes
					}
					has_character_flag = ISI_potential_target_flag
				}
			}
			modifier = { #There are no purges available
				factor = 0
				has_idea = ISI_purged_junior_navy_officers_3
				NOT = {
					any_navy_leader = {
						ISI_character_can_be_purged = yes
						NOT = { has_trait = trait_ISI_stalinist }
					}
				}
			}
			ISI_pick_great_purge_navy_type_effect = yes
		}
		25 = { # AIRFORCE
			modifier = { #Don't repeat last purge please
				factor = 0
				check_variable = { ISI_last_great_purge_area = 4 }
			}
			modifier = { #Someone is a potential targets
				factor = 2
				OR = {
					NOT = { has_country_flag = ISI_purged_airforce_chiefs_flag } #This purge can only happen "randomly" once, unless some air advisors are forcefully targeted in a focus or something
					any_character = {
						has_air_ledger = yes
						has_character_flag = ISI_potential_target_flag
					}
				}
			}
			modifier = { #We have closed a lot of designers man
				factor = 0.5
				has_country_flag = ISI_purged_airforce_chiefs_flag  #This purge can only happen "randomly" once, unless some air advisors are forcefully targeted in a focus or something
				NOT = {
					any_character = {
						has_air_ledger = yes
						has_character_flag = ISI_potential_target_flag
					}
				}
				count_triggers = {
					amount = 2
					has_country_flag = ISI_mig_design_bureau_dissolved_flag
					has_country_flag = ISI_ilyushin_design_bureau_dissolved_flag
					has_country_flag = ISI_tupolev_design_bureau_dissolved_flag
					has_country_flag = ISI_yakovlev_design_bureau_dissolved_flag
				}
			}

			modifier = { #There are no purges available
				factor = 0
				has_country_flag = ISI_purged_airforce_chiefs_flag  #This purge can only happen "randomly" once, unless some air advisors are forcefully targeted in a focus or something
				NOT = {
					any_character = {
						has_air_ledger = yes
						has_character_flag = ISI_potential_target_flag
					}
				}
				has_country_flag = ISI_mig_design_bureau_dissolved_flag
				has_country_flag = ISI_ilyushin_design_bureau_dissolved_flag
				has_country_flag = ISI_tupolev_design_bureau_dissolved_flag
				has_country_flag = ISI_yakovlev_design_bureau_dissolved_flag
			}
			ISI_pick_great_purge_airforce_type_effect = yes
		}
	}
}


###############
### PHASE 3 ###
###############
# Set the purge type [TYPE]

ISI_pick_regular_purge_administration_type_effect = {
	set_temp_variable = { ISI_random_purge_test = 0 } #Testing purposes (to see if/when all those conditions fail)
	random_list = {
		33 = { # ADVISOR PURGED
			modifier = { #No pastia no comiercio
				factor = 0
				NOT = {
					any_character = {
						is_character_slot = political_advisor
						ISI_character_can_be_purged = yes
					}
				}
			}
			modifier = { #If someone is already suspicious, then it's more likely that a purge to get rid of him happens
				factor = 3
				any_character = {
					is_character_slot = political_advisor
					has_character_flag = ISI_potential_target_flag
				}
			}
			ISI_trigger_regular_purge_advisor_accused_effect = yes
			add_to_temp_variable = { ISI_random_purge_test = 1 } #TEST
		}
		33 = { # CIVIL SERVANTS PURGED
			modifier = {
				factor = 0
				has_idea = ISI_understaffed_bureaucracy
			}
			ISI_trigger_regular_purge_civil_servants_purged_effect = yes
			add_to_temp_variable = { ISI_random_purge_test = 1 } #TEST
		}
		33 = { # NKVD PURGE
			modifier = { #Beriya is huevo pocho
				factor = 0
				has_idea = ISI_lavrenty_beriya
			}
			modifier = { #Yagoda is in the NKVD -> He shall be purged
				factor = 3
				has_idea = ISI_genrikh_yagoda
				date > 1938.1.1
			}
			modifier = { #Yezhov is in the NKVD -> He should be purged
				factor = 2
				has_idea = ISI_nikolay_yezhov
				date > 1939.1.1
			}
			ISI_trigger_regular_purge_nkvd_effect = yes
			add_to_temp_variable = { ISI_random_purge_test = 1 } #TEST
		}
	}
	if = { #TEST
		limit = {
			check_variable = { ISI_random_purge_test = 0 }
		}
		#log = "RANDOM PURGE FAILED. NO VALID PURGE AVAILABLE"
	}
}

ISI_pick_great_purge_administration_type_effect = {
	#JUST IN CASE WE ADD AN EXTRA GREAT PURGE. COULD BE DELETED AND THE EXTRA STEP SKIPPED IF NOT
	if = {
		limit = { #As long as someone can be purged, go ahead
			any_character = {
				is_character_slot = political_advisor
				NOT = { #NKVDs have their own purge
					is_character = ISI_genrikh_yagoda
					is_character = ISI_nikolay_yezhov
					is_character = ISI_lavrenty_beriya
				}
				ISI_character_can_be_purged = yes
			}
		}
		ISI_trigger_great_purge_moscow_trial_effect = yes
	}
	else = {
		#log = "What are you doing the Great Purge of administration is not available you madman"
	}
}

ISI_pick_regular_purge_army_type_effect = {
	set_temp_variable = { ISI_random_purge_test = 0 } #Testing purposes (to see if/when all those conditions fail)
	random_list = {
		25 = { # GENERAL ACCUSED
			modifier = { #No pastia no comiercio
				factor = 0
				NOT = {
					any_army_leader = {
						ISI_character_can_be_purged = yes
						NOT = { has_trait = trait_ISI_stalinist }
					}
				}
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_army_leader = {
					is_corps_commander = yes
					has_character_flag = ISI_potential_target_flag
				}
			}
			ISI_regular_purge_general_accused_effect = yes
			add_to_temp_variable = { ISI_random_purge_test = 1 } #TEST
		}
		25 = { # CONSPIRACY IN THE ACADEMY - ARMY
			modifier = {
				factor = 0
				has_idea = ISI_anti_soviet_military_thinking_banned_army
			}
			ISI_regular_purge_conspiracy_in_the_academy_effect = yes
			add_to_temp_variable = { ISI_random_purge_test = 1 } #TEST
		}
		25 = { # ANTI-SABOTEUR CAMPAIGN - ARMY
			modifier = {
				factor = 0
				has_idea = ISI_training_activities_curtailed
			}
			ISI_regular_purge_anti_saboteur_campaign_effect = yes
			add_to_temp_variable = { ISI_random_purge_test = 1 } #TEST
		}
		25 = { # GENERAL ACCUSES GENERAL
			modifier = { #No pastia no comiercio
				factor = 0
				NOT = { #TODO_MANU: Need to check for 2 guys fulfilling these conditions here
					any_army_leader = {
						ISI_character_can_be_purged = yes
						NOT = { has_trait = trait_ISI_stalinist }
					}
				}
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_character = {
					OR = {
						is_army_leader = yes
						has_army_ledger = yes
					}
					has_character_flag = ISI_potential_target_flag
				}
			}
			ISI_regular_purge_general_accuses_general_effect = yes
			add_to_temp_variable = { ISI_random_purge_test = 1 } #TEST
		}
	}
	if = { #TEST
		limit = {
			check_variable = { ISI_random_purge_test = 0 }
		}
		#log = "RANDOM PURGE FAILED. NO VALID PURGE AVAILABLE"
	}
}

ISI_pick_great_purge_army_type_effect = {
#Pick from the different possibilities
	set_temp_variable = { ISI_random_purge_test = 0 } #Testing purposes (to see if/when all those conditions fail)
	random_list = {
		50 = { # JUNIOR ARMY OFFICERS PURGED
			modifier = {
				factor = 0
				has_idea = ISI_purged_junior_army_officers_3
			}
			ISI_great_purge_army_junior_officers_effect = yes
			add_to_temp_variable = { ISI_random_purge_test = 1 } #TEST
		}
		50 = { # TRIAL OF THE GENERALS
			modifier = { #No pastia no comiercio
				factor = 0
				NOT = {
					any_army_leader = {
						ISI_character_can_be_purged = yes
						NOT = { has_trait = trait_ISI_stalinist }
					}
				}
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_character = {
					OR = {
						is_army_leader = yes
						has_army_ledger = yes
					}
					has_character_flag = ISI_potential_target_flag
				}
			}
			ISI_great_purge_army_trial_of_the_generals_effect = yes
			add_to_temp_variable = { ISI_random_purge_test = 1 } #TEST
		}
	}
	if = { #TEST
		limit = {
			check_variable = { ISI_random_purge_test = 0 }
		}
		#log = "RANDOM PURGE FAILED. NO VALID PURGE AVAILABLE"
	}
}

ISI_pick_regular_purge_navy_type_effect = {
	set_temp_variable = { ISI_random_purge_test = 0 } #Testing purposes (to see if/when all those conditions fail)
	random_list = {
		33 = { # ADMIRAL ACCUSED
			modifier = { #No pastia no comiercio
				factor = 0
				NOT = {
					any_navy_leader = {
						ISI_character_can_be_purged = yes
						NOT = { has_trait = trait_ISI_stalinist }
					}
				}
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_navy_leader = {
					has_character_flag = ISI_potential_target_flag
				}
			}
			ISI_trigger_regular_purge_admiral_accused_effect = yes
			add_to_temp_variable = { ISI_random_purge_test = 1 } #TEST
		}
		33 = { # CONSPIRACY IN THE ACADEMY - NAVY
			modifier = {
				factor = 0
				has_idea = ISI_anti_soviet_military_thinking_banned_navy
			}
			ISI_trigger_regular_purge_naval_conspiracy_in_the_academy_effect = yes
			add_to_temp_variable = { ISI_random_purge_test = 1 } #TEST
		}
		33 = { # ANTI-SABOTEUR CAMPAIGN - NAVY
			modifier = {
				factor = 0
				has_idea = ISI_shipyard_staff_purged
			}
			ISI_trigger_regular_purge_naval_anti_saboteur_campaign_effect = yes
			add_to_temp_variable = { ISI_random_purge_test = 1 } #TEST
		}
	}
	if = { #TEST
		limit = {
			check_variable = { ISI_random_purge_test = 0 }
		}
		#log = "RANDOM PURGE FAILED. NO VALID PURGE AVAILABLE"
	}
}

ISI_pick_great_purge_navy_type_effect = {
	set_temp_variable = { ISI_random_purge_test = 0 } #Testing purposes (to see if/when all those conditions fail)
	random_list = {
		50 = { # JUNIOR NAVY OFFICERS PURGED
			modifier = {
				factor = 0
				has_idea = ISI_purged_junior_navy_officers_3
			}
			ISI_trigger_great_purge_junior_naval_officers_effect = yes
			add_to_temp_variable = { ISI_random_purge_test = 1 } #TEST
		}
		50 = { # TRIAL OF THE ADMIRALS
			modifier = { #No pastia no comiercio
				factor = 0
				NOT = {
					any_navy_leader = {
						ISI_character_can_be_purged = yes
						NOT = { has_trait = trait_ISI_stalinist }
					}
				}
			}
			modifier = { #Someone is a potential target
				factor = 2
				any_character = {
					OR = {
						is_navy_leader = yes
						has_navy_ledger = yes
					}
					has_character_flag = ISI_potential_target_flag
				}
			}
			ISI_trigger_great_purge_trial_of_the_admirals_effect = yes
			add_to_temp_variable = { ISI_random_purge_test = 1 } #TEST
		}
	}
	if = { #TEST
		limit = {
			check_variable = { ISI_random_purge_test = 0 }
		}
		#log = "RANDOM PURGE FAILED. NO VALID PURGE AVAILABLE"
	}
}

ISI_pick_regular_purge_airforce_type_effect = {
	set_temp_variable = { ISI_random_purge_test = 0 } #Testing purposes (to see if/when all those conditions fail)
	random_list = {
		25 = { # CONSPIRACY IN THE ACADEMY - AIRFORCE
			modifier = {
				factor = 0
				has_idea = ISI_anti_soviet_military_thinking_banned_airforce
			}
			ISI_trigger_regular_purge_airforce_conspiracy_in_the_academy_effect = yes
			add_to_temp_variable = { ISI_random_purge_test = 1 } #TEST
		}
		25 = { # ANTI-SABOTEUR CAMPAIGN - AIRFORCE
			modifier = {
				factor = 0
				has_idea = ISI_ground_based_training
			}
			ISI_trigger_regular_purge_airforce_anti_saboteur_campaign_effect = yes
			add_to_temp_variable = { ISI_random_purge_test = 1 } #TEST
		}
	}
	if = { #TEST
		limit = {
			check_variable = { ISI_random_purge_test = 0 }
		}
		#log = "RANDOM PURGE FAILED. NO VALID PURGE AVAILABLE"
	}
}

ISI_pick_great_purge_airforce_type_effect = {
	random_list = {
		50 = { # DISSOLVE DESIGN BUREAU
			modifier = { #Nothing left to dissolve
				factor = 0
				has_country_flag = ISI_mig_design_bureau_dissolved_flag
				has_country_flag = ISI_ilyushin_design_bureau_dissolved_flag
				has_country_flag = ISI_tupolev_design_bureau_dissolved_flag
				has_country_flag = ISI_yakovlev_design_bureau_dissolved_flag
			}
			ISI_trigger_great_purge_design_bureau_dissolved_effect = yes
		}
		50 = { # PURGE ARIFORCE CHIEFS
			modifier = { #No pastia no comiercio
				factor = 0
				has_country_flag = ISI_purged_airforce_chiefs_flag  #This purge can only happen "randomly" once, unless some air advisors are forcefully targeted in a focus or something
				NOT = {
					any_character = {
						has_air_ledger = yes
						has_character_flag = ISI_potential_target_flag
					}
				}
			}
			modifier = { #Someone is a potential target
				factor = 2
				OR = {
					NOT = { has_country_flag = ISI_purged_airforce_chiefs_flag } #This purge can only happen "randomly" once, unless some air advisors are forcefully targeted in a focus or something
					any_character = {
						has_air_ledger = yes
						has_character_flag = ISI_potential_target_flag
					}
				}
			}
			ISI_trigger_great_purge_airforce_chiefs_effect = yes
		}
	}
}

###############
### PHASE 4 ###
###############
#Set the actual targets (people) [TARGETS] then trigger the appropriate event (Phase 5)

### ADVISOR ACCUSED OF TREASON ###
ISI_trigger_regular_purge_advisor_accused_effect = {
	hidden_effect = {
		if = { #PRIORITIZE FORCED TARGETS
			limit ={
				any_character = {
					is_character_slot = political_advisor
					ISI_character_can_be_purged = yes
					has_character_flag = ISI_potential_target_flag
				}
			}
			random_character = {
				limit = {
					is_character_slot = political_advisor
					ISI_character_can_be_purged = yes
					has_character_flag = ISI_potential_target_flag
				}
				set_character_flag = ISI_targeted_for_purge_flag
				clr_character_flag = ISI_potential_target_flag
				ROOT = { set_variable = { ISI_purged_character_for_loc = PREV } }
				#ROOT = { log = "I am [THIS.GetName] // var is [?ROOT.ISI_purged_character_for_loc.GetName]" } #Debug
			}
		}
		else_if = { #If no one to prio, then pick a random one
			limit = {
				any_character = {
					is_character_slot = political_advisor
					ISI_character_can_be_purged = yes
				}
			}
			random_character = {
				limit = {
					is_character_slot = political_advisor
					ISI_character_can_be_purged = yes
				}
				set_character_flag = ISI_targeted_for_purge_flag
				ROOT = { set_variable = { ISI_purged_character_for_loc = PREV } }
				#ROOT = { log = "This is [THIS.GetName] // PREV is [PREV.GetName] // ROOT is [ROOT.GetName] // VAR is [?ROOT.ISI_purged_character_for_loc.GetName]" } #Debug
			}
		}
		#log = "Person is [?ISI_purged_character_for_loc.GetName]" #Debug
	}

	country_event = NSB_soviet_paranoia_system_events.11 # TRIGGER EVENT

	set_variable = { ISI_last_regular_purge_area = 1 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}

### CIVIL SERVANTS PURGED
ISI_trigger_regular_purge_civil_servants_purged_effect = {
	country_event = NSB_soviet_paranoia_system_events.12 # TRIGGER EVENT

	set_variable = { ISI_last_regular_purge_area = 1 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}

### PURGE THE NKVD ###
ISI_trigger_regular_purge_nkvd_effect = {
	country_event = NSB_soviet_paranoia_system_events.13 # TRIGGER EVENT

	set_variable = { ISI_last_regular_purge_area = 1 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}

### GREAT PURGE - MOSCOW TRIALS ###
ISI_trigger_great_purge_moscow_trial_effect = {
	hidden_effect = {
		set_temp_variable = { temp_targets_index = 0 } #Targeted chars counter

		#If someone is already TARGETED, prio them first.
		if = {
			limit = {
				any_character = {
					is_character_slot = political_advisor
					has_character_flag = ISI_targeted_for_purge_flag
					ISI_character_can_be_purged = yes
				}
			}
			#These guys will be automatically targeted in the event, so we increase the var and only fill in with random chars if necessary
			if = {
				limit = {
					check_variable = { ISI_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
				}
				#log = "I will purge some random guys" #Debug
			}
			else = {
				#log = "I will use default people to purge" #Debug
				every_character = {
					limit = {
						is_character_slot = political_advisor
						has_character_flag = ISI_targeted_for_purge_flag
						ISI_character_can_be_purged = yes
					}
					PREV = { add_to_temp_variable = { temp_targets_index = 1 } }
				}
			}
		}

		set_temp_variable = { temp_people_to_purge = 0 } #Number of random people that can be purged

		#log = "VAR OVERRIDE is [?ISI_specific_random_purge_targets_override]" #Debug

		if = { #If a specific amount of random chars to be purged has been set, then use that number
			limit = {
				check_variable = { ISI_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
			}
			set_temp_variable = { temp_people_to_purge = ISI_specific_random_purge_targets_override }
			ISI_reset_specific_random_target_override_effect = yes #Reset this var (value = -1) so that it is not used again until specified otherwise
			#log = "Using OVERRIDE" #Debug
		}
		else = { #If no specific amount of random chars to be purged is set, then use default value
			set_temp_variable = { temp_people_to_purge = ISI_paranoia_great_purge_administration_number_of_targets }
			#log = "Using DEFAULT" #Debug
		}

		#log = " PEOPLE TO PURGE IS [?temp_people_to_purge]" #Debug
		#log = " INDEX IS = [?temp_targets_index]" #Debug
		if = {
			limit = {
				check_variable = { temp_people_to_purge = 0 compare = greater_than } #Random people to purge is not 0
				check_variable = { temp_targets_index < temp_people_to_purge } #There is room for random advisors to be purged (for when there are pre-set targets)
			}
			#log = "Random people" #Debug
			while_loop_effect = {
				limit = {
					check_variable = { temp_targets_index = temp_people_to_purge compare = less_than }
				}

				if = { #PRIORITIZE POTENTIAL TARGETS
					limit ={
						any_character = {
							is_character_slot = political_advisor
							ISI_character_can_be_purged = yes
							has_character_flag = ISI_potential_target_flag
							NOT = { has_character_flag = ISI_targeted_for_purge_flag }
						}
					}
					#log ="PRIOING STUFF" #Debug
					random_character = {
						limit = {
							is_character_slot = political_advisor
							ISI_character_can_be_purged = yes
							has_character_flag = ISI_potential_target_flag
							NOT = { has_character_flag = ISI_targeted_for_purge_flag }
						}
						set_character_flag = ISI_targeted_for_purge_flag
						clr_character_flag = ISI_potential_target_flag

						#log = "TARGET FIXED: [THIS.GetName]" #Debug
					}

				}
				else_if = { #If no one to prio, then pick a random one
					limit = {
						any_character = {
							is_character_slot = political_advisor
							ISI_character_can_be_purged = yes
							NOT = { has_character_flag = ISI_targeted_for_purge_flag }
						}
					}
					#log = "RANDOM STUFF" #Debug
					random_character = {
						limit = {
							is_character_slot = political_advisor
							ISI_character_can_be_purged = yes
							NOT = { has_character_flag = ISI_targeted_for_purge_flag }
						}
						set_character_flag = ISI_targeted_for_purge_flag
						#log = "RANDOM ADVISOR PICK: [THIS.GetName]" #Debug
					}

				}
				else = {
					#log = "RAN OUT OF POLITICAL ADVISORS, DAMN!" #Debug
				}
				add_to_temp_variable = { temp_targets_index = 1 }
				#log = "LOOP: temp_targets_index = [?temp_targets_index]" #Debug
			}
		}
		else = {
			#log = "No Random People" #Debug
		}
	}

	country_event = NSB_soviet_paranoia_system_events.19 # TRIGGER EVENT

	set_variable = { ISI_last_great_purge_area = 1 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}

### GENERAL ACCUSED OF TREASON ###
ISI_regular_purge_general_accused_effect = {
	hidden_effect = {
		if = { #PRIORITIZE FORCED TARGETS
			limit ={
				any_army_leader = {
					has_character_flag = ISI_potential_target_flag
					ISI_character_can_be_purged = yes
				}
			}
			random_army_leader = {
				limit = {
					has_character_flag = ISI_potential_target_flag
					ISI_character_can_be_purged = yes
				}
				set_character_flag = ISI_targeted_for_purge_flag
				clr_character_flag = ISI_potential_target_flag
				ISI = {
					set_variable = { ISI_accused_unit_leader_level = PREV.skill_level }
					multiply_variable = { ISI_accused_unit_leader_level = ISI_paranoia_based_on_level_multiplier }
				}
				ROOT = { set_variable = { ISI_purged_character_for_loc = PREV } }
				ROOT = { log = "This is [THIS.GetName] // PREV is [PREV.GetName] // ROOT is [ROOT.GetName] // VAR is [?ROOT.ISI_purged_character_for_loc.GetName]" }
			}
		}
		else = {
			random_army_leader = {
				limit = {
					ISI_character_can_be_purged = yes
					NOT = { has_trait = trait_ISI_stalinist }
				}
				set_character_flag = ISI_targeted_for_purge_flag
				ISI = {
					set_variable = { ISI_accused_unit_leader_level = PREV.skill_level }
					multiply_variable = { ISI_accused_unit_leader_level = ISI_paranoia_based_on_level_multiplier }
				}
				ROOT = { set_variable = { ISI_purged_character_for_loc = PREV } }
				ROOT = { log = "This is [THIS.GetName] // PREV is [PREV.GetName] // ROOT is [ROOT.GetName] // VAR is [?ROOT.ISI_purged_character_for_loc.GetName]" }
			}
		}
	}

	var:ISI_purged_character_for_loc = { unit_leader_event = NSB_soviet_paranoia_system_events.21 } # TRIGGER EVENT
	set_variable = { ISI_last_regular_purge_area = 2 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}

### CONSPIRACY IN THE ACADEMY ###
ISI_regular_purge_conspiracy_in_the_academy_effect = {
	country_event = NSB_soviet_paranoia_system_events.22 # TRIGGER EVENT

	set_variable = { ISI_last_regular_purge_area = 2 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}

### ANTI-SABOTEUR CAMPAIGN ###
ISI_regular_purge_anti_saboteur_campaign_effect = {
	country_event = NSB_soviet_paranoia_system_events.23 # TRIGGER EVENT

	set_variable = { ISI_last_regular_purge_area = 2 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}

### GENERAL ACCUSES GENERAL ###
ISI_regular_purge_general_accuses_general_effect = {
	hidden_effect = {
		# ACCUSER
		if = { # PRIO stalinist or politically connected
			limit ={
				any_army_leader = {
					OR = {
						has_trait = trait_ISI_stalinist
						has_trait = politically_connected
					}
					skill < 4
				}
			}
			random_army_leader = {
				limit = {
					OR = {
						has_trait = trait_ISI_stalinist
						has_trait = politically_connected
					}
					skill < 4
				}
				set_character_flag = ISI_purge_accuser_flag
				ISI = {
					set_variable = { ISI_accuser_unit_leader_level = PREV.skill_level }
					multiply_variable = { ISI_accuser_unit_leader_level = ISI_paranoia_based_on_level_multiplier }
				}
				ROOT = { set_variable = { ISI_accuser_character_for_loc = PREV } }
			}
		}
		else = {
			random_army_leader = {
				set_character_flag = ISI_purge_accuser_flag
				ISI = {
					set_variable = { ISI_accuser_unit_leader_level = PREV.skill_level }
					multiply_variable = { ISI_accuser_unit_leader_level = ISI_paranoia_based_on_level_multiplier }
				}
				ROOT = { set_variable = { ISI_accuser_character_for_loc = PREV } }
			}
		}

		# ACCUSED
		if = { # PRIO more level
			limit ={
				any_army_leader = {
					ISI_character_can_be_purged = yes
					OR = {
						has_character_flag = ISI_potential_target_flag
						AND = {
							NOT = { has_trait = trait_ISI_stalinist }
							NOT = { has_trait = politically_connected }
						}
					}
					skill > 3
				}
			}
			random_army_leader = {
				limit = {
					ISI_character_can_be_purged = yes
					OR = {
						has_character_flag = ISI_potential_target_flag
						AND = {
							NOT = { has_trait = trait_ISI_stalinist }
							NOT = { has_trait = politically_connected }
						}
					}
					skill > 3
				}
				set_character_flag = ISI_purge_accused_flag
				ISI = {
					set_variable = { ISI_accused_unit_leader_level = PREV.skill_level }
					multiply_variable = { ISI_accused_unit_leader_level = ISI_paranoia_based_on_level_multiplier }
				}
				ROOT = { set_variable = { ISI_accused_character_for_loc = PREV } }

			}
		}
		else = {
			random_army_leader = {
				set_character_flag = ISI_purge_accused_flag
				ISI = {
					set_variable = { ISI_accused_unit_leader_level = PREV.skill_level }
					multiply_variable = { ISI_accused_unit_leader_level = ISI_paranoia_based_on_level_multiplier }
				}
				ROOT = { set_variable = { ISI_accused_character_for_loc = PREV } }
			}
		}

		set_variable = { ISI_combined_unit_leader_level = ISI_accuser_unit_leader_level }
		add_to_variable = { ISI_combined_unit_leader_level = ISI_accused_unit_leader_level }
	}

	var:ISI_accused_character_for_loc = { unit_leader_event = NSB_soviet_paranoia_system_events.24 } # TRIGGER EVENT

	set_variable = { ISI_last_regular_purge_area = 2 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}

ISI_great_purge_army_junior_officers_effect = {
	country_event = NSB_soviet_paranoia_system_events.28 # TRIGGER EVENT (PHASE 5)

	set_variable = { ISI_last_great_purge_area = 2 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}


### TRIAL OF THE GENERALS ###
ISI_great_purge_army_trial_of_the_generals_effect = {
	hidden_effect = {
		set_temp_variable = { temp_targets_index = 0 } #Targeted chars counter

		#If someone is already TARGETED, prio them first.
		if = {
			limit = {
				any_character = {
					OR = {
						is_army_leader = yes #Generals + Marshals
						has_army_ledger = yes
					}
					has_character_flag = ISI_targeted_for_purge_flag
					ISI_character_can_be_purged = yes
				}
			}
			#These guys will be automatically targeted in the event, so we increase the var and only fill in with random chars if necessary
			if = {
				limit = {
					check_variable = { ISI_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
				}
				#log = "I will purge some random guys" #Debug
			}
			else = {
				#log = "I will use default people to purge" #Debug
				every_character = {
					limit = {
						OR = {
							is_army_leader = yes #Generals + Marshals
							has_army_ledger = yes
						}
						has_character_flag = ISI_targeted_for_purge_flag
						ISI_character_can_be_purged = yes
					}
					PREV = { add_to_temp_variable = { temp_targets_index = 1 } }
				}
			}
		}

		set_temp_variable = { temp_people_to_purge = 0 } #Number of random people that can be purged

		#log = "VAR OVERRIDE is [?ISI_specific_random_purge_targets_override]" #Debug

		if = { #If a specific amount of random chars to be purged has been set, then use that number
			limit = {
				check_variable = { ISI_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
			}
			set_temp_variable = { temp_people_to_purge = ISI_specific_random_purge_targets_override }
			ISI_reset_specific_random_target_override_effect = yes #Reset this var (value = -1) so that it is not used again until specified otherwise
			#log = "Using OVERRIDE" #Debug
		}
		else = { #If no specific amount of random chars to be purged is set, then use default value
			set_temp_variable = { temp_people_to_purge = ISI_paranoia_great_purge_army_number_of_targets }
			#log = "Using DEFAULT" #Debug
		}

		# PICK RANDOM PEOPLE IF APPROPRIATE
		if = {
			limit = {
				check_variable = { temp_people_to_purge = 0 compare = greater_than } #Random people to purge is not 0
				check_variable = { temp_targets_index < temp_people_to_purge } #There is room for random advisors to be purged (for when there are pre-set targets)
			}

			# PICK 1 FIELD MARSHAL
			hidden_effect = {
				if = { # Pick an already-targeted Marshal, if any
					limit = {
						any_army_leader = {
							is_field_marshal = yes
							has_character_flag = ISI_potential_target_flag
							ISI_character_can_be_purged = yes
							NOT = { has_trait = trait_ISI_stalinist }
						}
					}
					random_army_leader = {
						limit = {
							is_field_marshal = yes
							has_character_flag = ISI_potential_target_flag
							ISI_character_can_be_purged = yes
							NOT = { has_trait = trait_ISI_stalinist }
						}
						set_character_flag = ISI_targeted_for_purge_flag
						clr_character_flag = ISI_potential_target_flag
						#ROOT = { log = "Chosen Marshal - Prioritized - [PREV.GetName]" } #Debug
					}
					add_to_temp_variable = { temp_targets_index = 1 }
				}
				else_if = { # Pick an already-targeted Army advisor, if any
					limit = {
						any_character = {
							has_army_ledger = yes
							has_character_flag = ISI_potential_target_flag
							ISI_character_can_be_purged = yes
							NOT = { has_trait = trait_ISI_stalinist }
						}
					}
					random_character = {
						limit = {
							has_army_ledger = yes
							has_character_flag = ISI_potential_target_flag
							ISI_character_can_be_purged = yes
							NOT = { has_trait = trait_ISI_stalinist }
						}
						set_character_flag = ISI_targeted_for_purge_flag
						clr_character_flag = ISI_potential_target_flag
						#ROOT = { log = "Chosen Advisor - Prioritized - [PREV.GetName]" } Debug
					}
					add_to_temp_variable = { temp_targets_index = 1 }
				}
				else_if = { # Pick a random marshal
					limit = {
						any_army_leader = {
							is_field_marshal = yes
							ISI_character_can_be_purged = yes
							NOT = { has_trait = trait_ISI_stalinist }
						}
					}
					random_army_leader = {
						limit = {
							is_field_marshal = yes
							ISI_character_can_be_purged = yes
							NOT = { has_trait = trait_ISI_stalinist }
						}
						set_character_flag = ISI_targeted_for_purge_flag
						#ROOT = { log = "Chosen Marshal - Random - [PREV.GetName]" } #Debug
					}
					add_to_temp_variable = { temp_targets_index = 1 }
				}
				else_if = { # Pick a random army advisor
					limit = {
						any_character = {
							has_army_ledger = yes
							ISI_character_can_be_purged = yes
							NOT = { has_trait = trait_ISI_stalinist }
						}
					}
					random_character = {
						limit = {
							has_army_ledger = yes
							ISI_character_can_be_purged = yes
							NOT = { has_trait = trait_ISI_stalinist }
						}
						set_character_flag = ISI_targeted_for_purge_flag
						#ROOT = { log = "Chosen Advisor - Random - [PREV.GetName]" } #Debug
					}
					add_to_temp_variable = { temp_targets_index = 1 }
				}

				while_loop_effect = {
					limit = {
						check_variable = { temp_targets_index = temp_people_to_purge compare = less_than }
					}
					if = { #PRIORITIZE FORCED TARGETS - GENERALS
						limit ={
							any_army_leader = {
								is_corps_commander = yes
								has_character_flag = ISI_potential_target_flag
								ISI_character_can_be_purged = yes
								NOT = { has_trait = trait_ISI_stalinist }
							}
						}
						#log = "Prioritized General" #Debug
						random_army_leader = {
							limit = {
								is_corps_commander = yes
								has_character_flag = ISI_potential_target_flag
								ISI_character_can_be_purged = yes
								NOT = { has_trait = trait_ISI_stalinist }
							}
							set_character_flag = ISI_targeted_for_purge_flag
							clr_character_flag = ISI_potential_target_flag

							#ROOT = { log = "Chosen General - Prioritized - [PREV.GetName]" } #Debug
						}
						#log = "TARGET FIXED - General" #Debug
					}
					else_if = { #PRIORITIZE FORCED TARGETS - MARSHALS + ARMY ADVISORS
						limit ={
							any_character = {
								OR = {
									is_field_marshal = yes
									has_army_ledger = yes
								}
								has_character_flag = ISI_potential_target_flag
								ISI_character_can_be_purged = yes
								NOT = { has_trait = trait_ISI_stalinist }
							}
						}
						random_character = {
							limit = {
								OR = {
									is_field_marshal = yes
									has_army_ledger = yes
								}
								has_character_flag = ISI_potential_target_flag
								ISI_character_can_be_purged = yes
								NOT = { has_trait = trait_ISI_stalinist }
							}
							set_character_flag = ISI_targeted_for_purge_flag
							clr_character_flag = ISI_potential_target_flag

							#ROOT = { log = "Chosen Marshal/Advisor - Prioritized - [PREV.GetName]" } #Debug
						}
						#log = "TARGET FIXED - Marshal/Advisor" #Debug
					}
					else_if = { #FILL TARGET WITH RANDOM GENERALS (Could have an extra step, checking for non-Stalinist ppl, then this one)
						limit = {
							any_army_leader = {
								is_corps_commander = yes
								NOT = { has_character_flag = ISI_targeted_for_purge_flag }
								ISI_character_can_be_purged = yes
								NOT = { has_trait = trait_ISI_stalinist }
							}
						}
						random_army_leader = {
							limit = {
								is_corps_commander = yes
								NOT = { has_character_flag = ISI_targeted_for_purge_flag }
								ISI_character_can_be_purged = yes
								NOT = { has_trait = trait_ISI_stalinist }
							}
							set_character_flag = ISI_targeted_for_purge_flag

							#ROOT = { log = "Chosen General - Random - [PREV.GetName]" } #Debug
						}
						#log = "RANDOM GENERAL PICK" #Debug
					}
					else_if = { #IF NOT ENOUGH GENERALS, THEN PICK SOME EXTRA MARSHALS/ADVISORS
						limit = {
							any_character = {
								OR = {
									is_field_marshal = yes
									has_army_ledger = yes
								}
								NOT = { has_character_flag = ISI_targeted_for_purge_flag }
								ISI_character_can_be_purged = yes
								NOT = { has_trait = trait_ISI_stalinist }
							}
						}
						random_army_leader = {
							limit = {
								OR = {
									is_field_marshal = yes
									has_army_ledger = yes
								}
								NOT = { has_character_flag = ISI_targeted_for_purge_flag }
								ISI_character_can_be_purged = yes
								NOT = { has_trait = trait_ISI_stalinist }
							}
							set_character_flag = ISI_targeted_for_purge_flag

							#ROOT = { log = "Chosen Marshal/Advisor - Random - [PREV.GetName]" } #Debug

						}
						#log = "RANDOM MARSHAL/ADVISOR PICK" #Debug
					}
					else = {
						#log = "RAN OUT OF ARMY LEADERS, DAMN!" #Debug
					}
					add_to_temp_variable = { temp_targets_index = 1 }
					#log = "LOOP: temp_targets_index = [?temp_targets_index]" #Debug
				}
			}
		}
	}

	country_event = NSB_soviet_paranoia_system_events.29 # TRIGGER EVENT (PHASE 5)

	set_variable = { ISI_last_great_purge_area = 2 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}


ISI_trigger_regular_purge_admiral_accused_effect = {
	hidden_effect = {
		if = { #PRIORITIZE FORCED TARGETS
			limit ={
				any_navy_leader = {
					has_character_flag = ISI_potential_target_flag
					ISI_character_can_be_purged = yes
				}
			}
			random_navy_leader = {
				limit = {
					has_character_flag = ISI_potential_target_flag
					ISI_character_can_be_purged = yes
				}
				set_character_flag = ISI_targeted_for_purge_flag
				clr_character_flag = ISI_potential_target_flag
				ISI = {
					set_variable = { ISI_accused_unit_leader_level = PREV.skill_level }
					multiply_variable = { ISI_accused_unit_leader_level = ISI_paranoia_based_on_level_multiplier }
				}
				ROOT = { set_variable = { ISI_purged_character_for_loc = PREV } }	
			}
		}
		else = {
			random_navy_leader = {
				limit = {
					ISI_character_can_be_purged = yes
					NOT = { has_trait = trait_ISI_stalinist }
				}
				set_character_flag = ISI_targeted_for_purge_flag
				ISI = {
					set_variable = { ISI_accused_unit_leader_level = PREV.skill_level }
					multiply_variable = { ISI_accused_unit_leader_level = ISI_paranoia_based_on_level_multiplier }
				}
				ROOT = { set_variable = { ISI_purged_character_for_loc = PREV } }	
			}
		}
	}
	
	var:ISI_purged_character_for_loc = { unit_leader_event = NSB_soviet_paranoia_system_events.31 } # TRIGGER EVENT

	set_variable = { ISI_last_regular_purge_area = 3 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}

ISI_trigger_regular_purge_naval_conspiracy_in_the_academy_effect = {
	country_event = NSB_soviet_paranoia_system_events.32 # TRIGGER EVENT

	set_variable = { ISI_last_regular_purge_area = 3 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}

ISI_trigger_regular_purge_naval_anti_saboteur_campaign_effect = {
	country_event = NSB_soviet_paranoia_system_events.33 # TRIGGER EVENT

	set_variable = { ISI_last_regular_purge_area = 3 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}

ISI_trigger_great_purge_junior_naval_officers_effect = {
	country_event = NSB_soviet_paranoia_system_events.38 # TRIGGER EVENT

	set_variable = { ISI_last_great_purge_area = 3 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}

ISI_trigger_great_purge_trial_of_the_admirals_effect = {
	hidden_effect = {
		set_temp_variable = { temp_targets_index = 0 } #Targeted chars counter

		#If someone is already TARGETED, prio them first.
		if = {
			limit = {
				any_character = {
					OR = {
						is_navy_leader = yes #Admirals
						has_navy_ledger = yes #Navy Advisors
					}
					has_character_flag = ISI_targeted_for_purge_flag
					ISI_character_can_be_purged = yes
				}
			}
			#These guys will be automatically targeted in the event, so we increase the var and only fill in with random chars if necessary
			if = {
				limit = {
					check_variable = { ISI_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
				}
				#log = "I will purge some random guys" #Debug
			}
			else = {
				#log = "I will use default people to purge" #Debug
				every_character = {
					limit = {
						OR = {
							is_navy_leader = yes #Admirals
							has_navy_ledger = yes #Navy Advisors
						}
						has_character_flag = ISI_targeted_for_purge_flag
						ISI_character_can_be_purged = yes
					}
					PREV = { add_to_temp_variable = { temp_targets_index = 1 } }
				}
			}
		}

		set_temp_variable = { temp_people_to_purge = 0 } #Number of random people that can be purged

		#log = "VAR OVERRIDE is [?ISI_specific_random_purge_targets_override]" #Debug

		if = { #If a specific amount of random chars to be purged has been set, then use that number
			limit = {
				check_variable = { ISI_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
			}
			set_temp_variable = { temp_people_to_purge = ISI_specific_random_purge_targets_override }
			ISI_reset_specific_random_target_override_effect = yes #Reset this var (value = -1) so that it is not used again until specified otherwise
			#log = "Using OVERRIDE" #Debug
		}
		else = { #If no specific amount of random chars to be purged is set, then use default value
			set_temp_variable = { temp_people_to_purge = ISI_paranoia_great_purge_navy_number_of_targets }
			#log = "Using DEFAULT" #Debug
		}

		# PICK RANDOM PEOPLE IF APPROPRIATE
		if = {
			limit = {
				check_variable = { temp_people_to_purge = 0 compare = greater_than } #Random people to purge is not 0
				check_variable = { temp_targets_index < temp_people_to_purge } #There is room for random advisors to be purged (for when there are pre-set targets)
			}

			while_loop_effect = {
				limit = {
					check_variable = { temp_targets_index = temp_people_to_purge compare = less_than }
				}
				if = { #PRIORITIZE FORCED TARGETS - ADMIRALS/ADVISORS
					limit ={
						any_character = {
							OR = {
								is_navy_leader = yes #Admirals
								has_navy_ledger = yes #Navy Advisors
							}
							has_character_flag = ISI_potential_target_flag
							ISI_character_can_be_purged = yes
							NOT = { has_trait = trait_ISI_stalinist }
						}
					}
					random_character = {
						limit = {
							OR = {
								is_navy_leader = yes #Admirals
								has_navy_ledger = yes #Navy Advisors
							}
							has_character_flag = ISI_potential_target_flag
							ISI_character_can_be_purged = yes
							NOT = { has_trait = trait_ISI_stalinist }
						}
						set_character_flag = ISI_targeted_for_purge_flag
						clr_character_flag = ISI_potential_target_flag
					}
					#log = "TARGET FIXED" #Debug
				}
				else_if = { #FILL TARGET WITH RANDOM ADMIRALS/ADVISORS (Could have an extra step, checking for non-Stalinist ppl, then this one)
					limit = {
						any_character = {
							OR = {
								is_navy_leader = yes #Admirals
								has_navy_ledger = yes #Navy Advisors
							}
							NOT = { has_character_flag = ISI_targeted_for_purge_flag }
							ISI_character_can_be_purged = yes
							NOT = { has_trait = trait_ISI_stalinist }
						}
					}
					random_character = {
						limit = {
							OR = {
								is_navy_leader = yes #Admirals
								has_navy_ledger = yes #Navy Advisors
							}
							NOT = { has_character_flag = ISI_targeted_for_purge_flag }
							ISI_character_can_be_purged = yes
							NOT = { has_trait = trait_ISI_stalinist }
						}
						set_character_flag = ISI_targeted_for_purge_flag
					}
					#log = "RANDOM ADMIRAL/ADVISOR PICK" #Debug
				}
				else = {
					#log = "RAN OUT OF NAVY LEADERS, DAMN!" #Debug
				}
				add_to_temp_variable = { temp_targets_index = 1 }
				#log = "LOOP: temp_targets_index = [?temp_targets_index]" #Debug
			}
		}
	}

	country_event = NSB_soviet_paranoia_system_events.39 # TRIGGER EVENT

	set_variable = { ISI_last_great_purge_area = 3 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}

ISI_trigger_regular_purge_airforce_conspiracy_in_the_academy_effect = {
	country_event = NSB_soviet_paranoia_system_events.41 # TRIGGER EVENT

	set_variable = { ISI_last_regular_purge_area = 4 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}

ISI_trigger_regular_purge_airforce_anti_saboteur_campaign_effect = {
	country_event = NSB_soviet_paranoia_system_events.42 # TRIGGER EVENT

	set_variable = { ISI_last_regular_purge_area = 4 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}

ISI_trigger_great_purge_design_bureau_dissolved_effect = {
	hidden_effect = {
		set_variable = { ISI_random_bureau_to_dissolve = random } # THIS IS NOW PASSED TO THE EVENT, BUT NEEDS TO BE DONE HERE AND STORED IN VAR
		#log = "Random bureau to dissolve: [?ISI_random_bureau_to_dissolve]"
	}

	country_event = NSB_soviet_paranoia_system_events.48 # TRIGGER EVENT

	set_variable = { ISI_last_great_purge_area = 4 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}

ISI_trigger_great_purge_airforce_chiefs_effect = {
	hidden_effect = {
		set_temp_variable = { temp_targets_index = 0 } #Targeted chars counter
		#If someone is already TARGETED, prio them first.
		if = {
			limit = {
				any_character = {
					has_air_ledger = yes
					has_character_flag = ISI_targeted_for_purge_flag
					ISI_character_can_be_purged = yes
				}
			}
			#These guys will be automatically targeted in the event, so we increase the var and only fill in with random chars if necessary
			if = {
				limit = {
					check_variable = { ISI_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
				}
				#log = "I will purge some random guys" #Debug
			}
			else = {
				#log = "I will use default people to purge" #Debug
				every_character = {
					limit = {
						has_air_ledger = yes
						has_character_flag = ISI_targeted_for_purge_flag
						ISI_character_can_be_purged = yes
					}
					PREV = { add_to_temp_variable = { temp_targets_index = 1 } }
				}
			}
		}
		else = { # If no one targeted via another effect, then pick historically purged people
			if = {
				limit = {
					has_character = ISI_sergey_khudyakov
					ISI_sergey_khudyakov = { ISI_character_can_be_purged = yes }
				}
				ISI_sergey_khudyakov = { #MHC
					set_character_flag = ISI_targeted_for_purge_flag
				}
				add_to_temp_variable = { temp_targets_index = 1 }
			}
			if = {
				limit = {
					has_character = ISI_yakov_smushkevich
					ISI_yakov_smushkevich = { ISI_character_can_be_purged = yes }
				}
				ISI_yakov_smushkevich = {#Chief
					set_character_flag = ISI_targeted_for_purge_flag
				}
				add_to_temp_variable = { temp_targets_index = 1 }
			}
			if = {
				limit = {
					has_character = ISI_pavel_rychagov
					ISI_pavel_rychagov = { ISI_character_can_be_purged = yes }
				}
				ISI_pavel_rychagov = { #Chief
					set_character_flag = ISI_targeted_for_purge_flag
				}
				add_to_temp_variable = { temp_targets_index = 1 }
			}
		}

		set_temp_variable = { temp_people_to_purge = 0 } #Number of random people that can be purged

		#log = "VAR OVERRIDE is [?ISI_specific_random_purge_targets_override]" #Debug

		if = { #If a specific amount of random chars to be purged has been set, then use that number
			limit = {
				check_variable = { ISI_specific_random_purge_targets_override = 0 compare = greater_than_or_equals }
			}
			set_temp_variable = { temp_people_to_purge = ISI_specific_random_purge_targets_override }
			ISI_reset_specific_random_target_override_effect = yes #Reset this var (value = -1) so that it is not used again until specified otherwise
			#log = "Using OVERRIDE" #Debug
		}
		else = { #If no specific amount of random chars to be purged is set, then use default value
			set_temp_variable = { temp_people_to_purge = ISI_paranoia_great_purge_air_number_of_targets }
			#log = "Using DEFAULT" #Debug
		}

		# PICK RANDOM PEOPLE IF APPROPRIATE
		if = {
			limit = {
				check_variable = { temp_people_to_purge = 0 compare = greater_than } #Random people to purge is not 0
				check_variable = { temp_targets_index < temp_people_to_purge } #There is room for random advisors to be purged (for when there are pre-set targets)
			}

			while_loop_effect = {
				limit = {
					check_variable = { temp_targets_index = temp_people_to_purge compare = less_than }
				}
				if = { #PRIORITIZE FORCED TARGETS
					limit ={
						any_character = {
							has_air_ledger = yes
							has_character_flag = ISI_potential_target_flag
							ISI_character_can_be_purged = yes
						}
					}
					random_character = {
						limit = {
							has_air_ledger = yes
							has_character_flag = ISI_potential_target_flag
							ISI_character_can_be_purged = yes
						}
						set_character_flag = ISI_targeted_for_purge_flag
						clr_character_flag = ISI_potential_target_flag
					}
					#log = "TARGET FIXED" #Debug
				}
				else_if = { #FILL TARGET WITH RANDOM AIRFORCE ADVISORS (Could have an extra step, checking for non-Stalinist ppl, then this one)
					limit = {
						any_character = {
							has_air_ledger = yes
							NOT = { has_character_flag = ISI_targeted_for_purge_flag }
							ISI_character_can_be_purged = yes
						}
					}
					random_character = {
						limit = {
							has_air_ledger = yes
							NOT = { has_character_flag = ISI_targeted_for_purge_flag }
							ISI_character_can_be_purged = yes
						}
						set_character_flag = ISI_targeted_for_purge_flag
					}
					#log = "RANDOM ADMIRAL/ADVISOR PICK" #Debug
				}
				else = {
					#log = "RAN OUT OF NAVY LEADERS, DAMN!" #Debug
				}
				add_to_temp_variable = { temp_targets_index = 1 }
				#log = "LOOP: temp_targets_index = [?temp_targets_index]" #Debug
			}
		}
	}

	country_event = NSB_soviet_paranoia_system_events.49 # TRIGGER EVENT

	set_variable = { ISI_last_regular_purge_area = 4 } #Set area purged to prevent same area from being purged twice in a row
	set_country_flag = ISI_last_purge_flag
}

